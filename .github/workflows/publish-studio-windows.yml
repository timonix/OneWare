name: Publish Studio Desktop for Windows

on:
  workflow_dispatch:
  workflow_run:
    workflows: [ Publish Studio Desktop ]
    types:
      - completed

jobs:
  build:
    name: Build
    runs-on: self-hosted
    outputs:
      version: ${{ steps.get-oneware-version.outputs.info }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: mavrosxristoforos/get-xml-info@2.0
        name: Get Version
        id: get-oneware-version
        with:
          xml-file: "./build/props/Base.props"
          xpath: "//*[local-name()='Project']/*[local-name()='PropertyGroup']/*[local-name()='StudioVersion']"
      - name: Make Out Dir
        run: mkdir ./out
      - name: Publish
        run: dotnet build ./studio/OneWare.Studio.Desktop.WindowsInstaller/OneWare.Studio.Desktop.WindowsInstaller.wixproj -c Release -r win-x64 -o ./publish
      - name: Create Button HTML
        shell: powershell
        run: ((Get-Content -path ./studio/OneWare.Studio.Desktop.WindowsInstaller/WinDownloadTemplate.htm -Raw) -replace '\$version\$', '${{ steps.get-oneware-version.outputs.info }}') | Set-Content -NoNewline -Path ./out/WinDownload.htm -Encoding UTF8
      - name: Sign Installer
        shell: powershell
        run: signtool sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /a ./publish/en-us/OneWareStudio.WindowsInstaller.msi
      - name: Create VersionInfo
        run: echo "${{ steps.get-oneware-version.outputs.info }}|https://github.com/one-ware/OneWare/releases/download/${{ steps.get-oneware-version.outputs.info }}/OneWareStudio-${{ steps.get-oneware-version.outputs.info }}-win-x64.msi" > ./out/win-x64.txt
      - name: Rename Installer
        run: mv ./publish/en-us/OneWareStudio.WindowsInstaller.msi ./out/OneWareStudio-${{ steps.get-oneware-version.outputs.info }}-win-x64.msi
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            ./out/*.msi
            ./out/WinDownload.htm
            ./out/win-x64.txt

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.build.outputs.version }}
          artifacts: "*.msi"
          allowUpdates: true
          omitBodyDuringUpdate: True
          omitNameDuringUpdate: True
          omitPrereleaseDuringUpdate: True
          omitDraftDuringUpdate: True
      - name: Upload to CDN
        uses: pontago/lftp-deploy-action@master
        with:
          protocol: sftp
          host: 5017617850.ssh.w2.strato.hosting
          username: ${{ secrets.ONEWARE_SFTP_USER }}
          password: ${{ secrets.ONEWARE_SFTP_PW }}
          script: |
            set cmd:fail-exit false
            mkdir ./cdn.one-ware.com/onewarestudio/${{ needs.build.outputs.version }}
            set cmd:fail-exit true
            put OneWareStudio-${{ needs.build.outputs.version }}-win-x64.msi -o ./cdn.one-ware.com/onewarestudio/${{ needs.build.outputs.version }}/OneWareStudio-${{ needs.build.outputs.version }}-win-x64.msi
            put WinDownload.htm -o ./cdn.one-ware.com/onewarestudio/WinDownload.htm
            put win-x64.txt -o ./cdn.one-ware.com/onewarestudio/win-x64.txt
