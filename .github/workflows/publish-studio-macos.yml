name: Publish Studio Desktop for MacOS

on:
  workflow_dispatch:
  workflow_run:
    workflows: [ Publish Studio Desktop ]
    types:
      - completed

jobs:
  build:
    name: Build
    runs-on: macos-latest
    outputs:
      version: ${{ steps.get-oneware-version.outputs.info }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Get Version
        id: get-oneware-version
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: "./build/props/Base.props"
          xpath: "//*[local-name()='Project']/*[local-name()='PropertyGroup']/*[local-name()='StudioVersion']"
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install create-dmg using Brew
        run: brew install create-dmg
      - name: Make Out Dir
        run: mkdir ./out
      - name: Create Bundles
        working-directory: ./studio/OneWare.Studio.Desktop.MacOSInstaller
        run: ./CreateAppBundle.sh
      - name: Rename Packages
        run: |
          mv ./studio/OneWare.Studio.Desktop.MacOSInstaller/publish/OneWareStudio-x64.dmg ./out/OneWareStudio-${{ steps.get-oneware-version.outputs.info }}-osx-x64.dmg
          mv ./studio/OneWare.Studio.Desktop.MacOSInstaller/publish/OneWareStudio-arm64.dmg ./out/OneWareStudio-${{ steps.get-oneware-version.outputs.info }}-osx-arm64.dmg
      - name: Create Button HTML x64
        shell: pwsh
        run: ((Get-Content -path ./studio/OneWare.Studio.Desktop.MacOSInstaller/MacOSDownloadTemplate-x64.htm -Raw) -replace '\$version\$', '${{ steps.get-oneware-version.outputs.info }}') | Set-Content -NoNewline -Path ./out/MacOSDownload-x64.htm -Encoding UTF8
      - name: Create Button HTML arm64
        shell: pwsh
        run: ((Get-Content -path ./studio/OneWare.Studio.Desktop.MacOSInstaller/MacOSDownloadTemplate-arm64.htm -Raw) -replace '\$version\$', '${{ steps.get-oneware-version.outputs.info }}') | Set-Content -NoNewline -Path ./out/MacOSDownload-arm64.htm -Encoding UTF8
      - name: Create VersionInfo x64
        run: echo "${{ steps.get-oneware-version.outputs.info }}|https://github.com/one-ware/OneWare/releases/download/${{ steps.get-oneware-version.outputs.info }}/OneWareStudio-${{ steps.get-oneware-version.outputs.info }}-osx-x64.dmg" > ./out/osx-x64.txt
      - name: Create VersionInfo arm64
        run: echo "${{ steps.get-oneware-version.outputs.info }}|https://github.com/one-ware/OneWare/releases/download/${{ steps.get-oneware-version.outputs.info }}/OneWareStudio-${{ steps.get-oneware-version.outputs.info }}-osx-arm64.dmg" > ./out/osx-arm64.txt
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            ./out/*.dmg
            ./out/*.htm
            ./out/*.txt

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-artifacts
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.build.outputs.version }}
          artifacts: "*.dmg"
          allowUpdates: true
          omitBodyDuringUpdate: True
          omitNameDuringUpdate: True
          omitPrereleaseDuringUpdate: True
          omitDraftDuringUpdate: True
      - name: Upload to CDN
        uses: pontago/lftp-deploy-action@master
        with:
          protocol: sftp
          host: 5017617850.ssh.w2.strato.hosting
          username: ${{ secrets.ONEWARE_SFTP_USER }}
          password: ${{ secrets.ONEWARE_SFTP_PW }}
          script: |
            set cmd:fail-exit false
            mkdir ./cdn.one-ware.com/onewarestudio/${{ needs.build.outputs.version }}
            set cmd:fail-exit true
            put OneWareStudio-${{ needs.build.outputs.version }}-osx-x64.dmg -o ./cdn.one-ware.com/onewarestudio/${{ needs.build.outputs.version }}/OneWareStudio-${{ needs.build.outputs.version }}-osx-x64.dmg
            put OneWareStudio-${{ needs.build.outputs.version }}-osx-arm64.dmg -o ./cdn.one-ware.com/onewarestudio/${{ needs.build.outputs.version }}/OneWareStudio-${{ needs.build.outputs.version }}-osx-arm64.dmg
            put MacOSDownload-x64.htm -o ./cdn.one-ware.com/onewarestudio/MacOSDownload-x64.htm
            put MacOSDownload-arm64.htm -o ./cdn.one-ware.com/onewarestudio/MacOSDownload-arm64.htm
            put osx-x64.txt -o ./cdn.one-ware.com/onewarestudio/osx-x64.txt
            put osx-arm64.txt -o ./cdn.one-ware.com/onewarestudio/osx-arm64.txt
